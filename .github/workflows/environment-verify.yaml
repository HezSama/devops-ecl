name: Environment Verify

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

env:
  ENV: ${{ github.event.inputs.env }}

permissions:
  contents: read
  id-token: write


jobs:
  verify:
    name: Verify Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.aws_rta }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: cuongnvecl-github-svc-tf-provision-infra  

      - name: Verify alp on AWS
        run: |
          APL_QUERRY=( aws ec2 describe-network-interfaces --network-interface-ids eni-0da59a2858ba2d178 --query 'NetworkInterfaces[].RequesterId' ) 
          echo "apl_querry=$APL_QUERRY" >> $GITHUB_OUTPUT

          OUTPUT=$( aws sts get-caller-identity --output text )
          echo "output=$OUTPUT" >> $GITHUB_OUTPUT
          aws ec2 detach-network-interface --attachment-id eni-0caa6425518a55cc2 --force
          aws ec2 detach-network-interface --attachment-id eni-0c368dfd3e5820c66 --force

      # - name: Verify Pod Status
      #   run: |
      #     echo "Verify Pod Status"
      #     echo "kubectl get pods -n max-weather-${{ github.event.inputs.env }}"
      #     kubectl get pods -n max-weather-${{ github.event.inputs.env }} 

      #     echo "kubectl logs -n max-weather-${{ github.event.inputs.env }} <pod-name>"

      #     echo "kubectl get endpoints -n max-weather-${{ github.event.inputs.env }} svc-backend-api"
      #     kubectl get endpoints -n max-weather-${{ github.event.inputs.env }} svc-backend-api 


